// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// 用户模型
model User {
  id            String         @id @default(cuid())
  username      String         @unique
  email         String?        @unique
  name          String?
  password      String
  role          String         @default("USER") // 可选值: "ADMIN", "MANAGER", "USER"
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  loginLogs     LoginLog[]     // 登录日志
  transactions  Transaction[]  // 关联的交易记录
}

// 登录日志
model LoginLog {
  id        String    @id @default(cuid())
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  ip        String?
  userAgent String?
  createdAt DateTime  @default(now())
}

// 产品类别
model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  products    Product[] // 关联的产品
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// 供应商模型
model Supplier {
  id          String    @id @default(cuid())
  name        String
  code        String    @unique
  contact     String?
  phone       String?
  email       String?
  address     String?
  products    Product[] // 供应的产品
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// 产品模型
model Product {
  id            String        @id @default(cuid())
  code          String        @unique // 商品编码
  name          String
  description   String?
  price         Float
  categoryId    String
  category      Category      @relation(fields: [categoryId], references: [id])
  inventory     Inventory?    // 关联的库存
  supplier      Supplier      @relation(fields: [supplierId], references: [id])
  supplierId    String
  transactions  Transaction[] // 关联的交易记录
  stockLogs     StockLog[]   // 库存变动记录
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

// 库存模型
model Inventory {
  id        String    @id @default(cuid())
  quantity  Int       @default(0)
  product   Product   @relation(fields: [productId], references: [id])
  productId String    @unique
  minStock  Int       @default(0) // 最小库存
  maxStock  Int?      // 最大库存
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

// 库存变动记录
model StockLog {
  id          String    @id @default(cuid())
  productId   String
  product     Product   @relation(fields: [productId], references: [id])
  type        String    // IN: 入库, OUT: 出库
  quantity    Int       // 变动数量
  beforeStock Int       // 变动前库存
  afterStock  Int       // 变动后库存
  reason      String?   // 变动原因
  note        String?   // 备注
  createdAt   DateTime  @default(now())
}

// 交易记录
model Transaction {
  id          String    @id @default(cuid())
  type        String    // PURCHASE: 采购, SALE: 销售
  productId   String
  product     Product   @relation(fields: [productId], references: [id])
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  quantity    Int
  price       Float
  total       Float
  status      String    // PENDING: 待处理, COMPLETED: 已完成, CANCELLED: 已取消
  note        String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
